version: '3.8'

services:
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:19092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:19092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  game-event-ingest-service:
    build:
      context: ./GameEventIngestService
      dockerfile: Dockerfile
    container_name: game-event-ingest-service
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_URL=kafka:19092
      - GAME_ID=game1

  replay-service:
    build:
      context: ./ReplayService
      dockerfile: Dockerfile
    container_name: replay-service
    ports:
      - "8082:8081"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_URL=kafka:19092
      - KAFKA_TOPIC=nba-finals-game1
    restart: unless-stopped

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda-console
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: kafka:19092
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped

  replay-ui:
    image: python:3.11-slim
    container_name: replay-ui
    working_dir: /app
    volumes:
      - ./ReplayService/test-time-replay.html:/app/test-time-replay.html:ro
    command: python -m http.server 8000
    ports:
      - "8000:8000"
    restart: unless-stopped
